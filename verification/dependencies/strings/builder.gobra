// Copyright 2009 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in https://golang.org/LICENSE

// Signatures for the public declarations in file
// https://github.com/golang/go/blob/master/src/strings/strings.go

// +gobra

package strings

// A Builder is used to efficiently build a string using Write methods.
// It minimizes memory copying. The zero value is ready to use.
// Do not copy a non-zero Builder.
type Builder struct {
	addr *Builder // of receiver, to detect copies by value
	buf  []byte
}

pred (b *Builder) Mem()
pred (b *Builder) LowMem(ghost isLow bool)

// String returns the accumulated string.
preserves acc(b.Mem(), 1/2) && acc(b.LowMem(isLow), 1/2)
ensures isLow ==> low(str)
decreases _
func (b *Builder) String(ghost isLow bool) (str string)

requires  0 <= n
preserves acc(b.Mem(), 1/2) && acc(b.LowMem(isLow), 1/2)
decreases _
func (b *Builder) Grow(n int, ghost isLow bool)

requires acc(b.Mem(), 1/2) && acc(b.LowMem(isLowB), 1/2)
requires isLowS ==> low(s)
ensures   err == nil
ensures acc(b.Mem(), 1/2) && acc(b.LowMem(isLowS && isLowB), 1/2)
ensures isLowS && isLowB ==> low(n)
decreases _
func (b *Builder) WriteString(s string, ghost isLowB, isLowS bool) (n int, err error)

ghost
requires acc(b)
requires *b === Builder{}
ensures acc(b.Mem(), 1/2) && acc(b.LowMem(true), 1/2)
decreases _
func (b *Builder) ZeroBuilderIsReadyToUse()